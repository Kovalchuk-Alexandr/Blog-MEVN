{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6c8fe47e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"items\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"fulltext\"\n}, [/*#__PURE__*/_createCommentVNode(\" {{ this.items.full_text }} \")], -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Пару слов о С#\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \" C# или \\\"си-шарп\\\" – это объектно-ориентированный язык программирования, представленный компанией Microsoft в 2000 году. Он был создан для платформы .NET Framework. Его предназначение – создание приложений для загрузки систем Windows, веб-приложений, мобильных приложений и игр. Но сегодня C# также активно используют для систем безопасности, файловых систем и создания различных продуктов для ОС Android и iOS. \", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \" Как только начинаешь работать с этим языков, сразу можно определить схожесть его синтаксиса с С и Java. И это неудивительно, ведь “си-шарп” создавался, как конкурент Java, а для работы многое перенял у С. Поэтому несмотря на свой солидный возраст стал неким сыном этих двух языков. \", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \" Многозадачность C# стала доступной за счет фактически постоянной привязки к фреймворкам. Кроме того, он сочетает в себе простоту использования, гибкость и мощность, а также возможность удобного создания качественного программного обеспечения. \", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Преимущества Kotlin\", -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"color\": \"red\"\n  }\n}, \"Kotlin\"), /*#__PURE__*/_createTextVNode(\" совместим с Java и может работать на платформе JVM, что позволяет использовать существующие библиотеки и инструменты для разработки Android-приложений. А Google официально поддерживает Kotlin для разработки Android-приложений и включил его в Android Studio, что делает его более доступным и удобным для использования разработчиками. Но это далеко не все, что может этот язык программирования. Ниже приведены 4 важных преимущества. \")], -1 /* HOISTED */));\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  width: \"400px\",\n  src: \"https://itproger.com/img/courses/1683276209.png\",\n  alt: \"\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Взаимозаменяемость\", -1 /* HOISTED */));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \" Процесс легкости взаимодействия Java и Kotlin прослеживается даже при работе с кодом. Разработчики могут писать код на двух этих языках прямо в одном проекте, и они будут с легкостью компилироваться. Конечный пользователь не сможет понять, что код был написан при использовании сразу и Java, и Kotlin. Никто и не различит в каких участках проекта был использован тот или иной язык. \", -1 /* HOISTED */));\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Простота перехода с одного языка на другой\", -1 /* HOISTED */));\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \" Kotlin оснащен статической типизацией от JetBrains и является не просто заменой Java, а его улучшенной версией. Поэтому если вы отлично знаете Java, вы с легкостью сможете перейти на Kotlin. Весь процесс изучения языка не будет загроможден множеством непонятных аспектов. Синтаксис очень схож, алгоритмы тоже, а значит даже без малейших знаний Kotlin, вы не растеряетесь и сможете быстро разобраться. \", -1 /* HOISTED */));\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  width: \"400px\",\n  src: \"https://itproger.com/img/courses/1683276106.png\",\n  alt: \"\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, [/*#__PURE__*/_createTextVNode(\"Поддержка \"), /*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"color\": \"red\"\n  }\n}, \" Android Studio\")], -1 /* HOISTED */));\nconst _hoisted_21 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \" С помощью Kotlin и других языков был написан Android Studio. Также для его создания был использован еще один продукт JetBrains – IntelliJ IDEA. Собственно понятно, что у Kotlin будет отличная поддержка Android Studio. Как только вы загрузите и установите плагин этого языка программирования, с помощью Android Studio можно будет произвести сразу все необходимые настройки. При этом все это будет сделать очень легко. \", -1 /* HOISTED */));\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_23 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Более краткий и понятный код\", -1 /* HOISTED */));\nconst _hoisted_24 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \" Одним из основных преимуществ Kotlin является его выразительность и удобный синтаксис, который делает код более читаемым и понятным. Kotlin также предоставляет более безопасный код и предотвращает некоторые ошибки, которые могут возникнуть при использовании Java. Кроме того, ошибок в Kotlin на порядок меньше, ввиду более короткого кода. При этом результат работы с двумя языками будет одинаков, но там где краткость, там и намного меньше хлопот в работе разработчика. Поэтому создание любого стандартного кода на Kotlin будет более приятным, чем работа с другими языками программирования, требующими большого количества слов. \", -1 /* HOISTED */));\nconst _hoisted_25 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */));\nconst _hoisted_26 = {\n  class: \"comments\"\n};\nconst _hoisted_27 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Leave some comments\", -1 /* HOISTED */));\nconst _hoisted_28 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_29 = {\n  for: \"msg\"\n};\nconst _hoisted_30 = {\n  key: 0,\n  id: \"articles\"\n};\nconst _hoisted_31 = [\"onClick\"];\nconst _hoisted_32 = {\n  key: 1,\n  class: \"empty\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_center = _resolveComponent(\"center\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, \"ID: \" + _toDisplayString($props.id), 1 /* TEXT */), _createElementVNode(\"main\", _hoisted_1, [_createCommentVNode(\" ---------- Блок статьи ------------ -\"), _createCommentVNode(\" <div class=\\\"item\\\" v-for=\\\"el in items\\\" :key=\\\"el.id\\\"> \"), _createElementVNode(\"div\", null, [_createElementVNode(\"img\", {\n    src: this.items.img,\n    alt: \"\"\n  }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"h4\", null, _toDisplayString(this.items.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(this.items.anons), 1 /* TEXT */), _createCommentVNode(\" <p>{{ this.items.full_text }}</p> \"), _hoisted_3, _createCommentVNode(\" ----------  Блок полной статьи --------- \"), _hoisted_4, _hoisted_5, _hoisted_6, _hoisted_7, _hoisted_8, _hoisted_9, _hoisted_10, _hoisted_11, _createVNode(_component_center, null, {\n    default: _withCtx(() => [_hoisted_12]),\n    _: 1 /* STABLE */\n  }), _hoisted_13, _hoisted_14, _hoisted_15, _hoisted_16, _hoisted_17, _createVNode(_component_center, null, {\n    default: _withCtx(() => [_hoisted_18]),\n    _: 1 /* STABLE */\n  }), _hoisted_19, _hoisted_20, _hoisted_21, _hoisted_22, _hoisted_23, _hoisted_24, _hoisted_25, _createElementVNode(\"p\", null, _toDisplayString(this.items.published), 1 /* TEXT */), _createCommentVNode(\" <button type=\\\"button\\\" class=\\\"btnDetails\\\">Details</button> \")])]), _createElementVNode(\"section\", _hoisted_26, [_createElementVNode(\"div\", null, [_hoisted_27, _createCommentVNode(\" <form @submit.prevent=\\\"createPost\\\" :class=\\\"{ error: maxCharacters > 20 }\\\"> \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.addMsg && $options.addMsg(...args), [\"prevent\"])),\n    class: _normalizeClass({\n      error: $options.maxCharacters > 100\n    })\n  }, [_createCommentVNode(\" <form> \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.userInput = $event),\n    placeholder: \"Enter You Name\",\n    id: \"user\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.userInput]]), _hoisted_28, _createElementVNode(\"label\", _hoisted_29, [_createTextVNode(\"Max text: \"), _createElementVNode(\"span\", null, _toDisplayString($options.maxCharacters) + \" / 100\", 1 /* TEXT */)]), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.msgInput = $event),\n    placeholder: \"Enter some message\",\n    id: \"msg\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.msgInput]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btnAdd\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.addMsg && $options.addMsg(...args))\n  }, _toDisplayString($data.msgBtnAdd), 1 /* TEXT */)], 34 /* CLASS, HYDRATE_EVENTS */)]), $data.comments.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_30, [_createCommentVNode(\" Перебираем массив, получаем эл-т, индекс и выводим каждый элемент \"), _createElementVNode(\"h2\", null, [_createTextVNode(\" Comments ( \"), _createElementVNode(\"span\", null, _toDisplayString($data.comments.length), 1 /* TEXT */), _createTextVNode(\" ) \")]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, el => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"list-item\",\n      key: el.id\n    }, [_createElementVNode(\"button\", {\n      onClick: $event => $options.deletePost(el)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_31), _createCommentVNode(\" <p>\\n          {{ el.message }} <span>{{ el.user }}</span>\\n        </p> \"), _createElementVNode(\"h4\", null, _toDisplayString(el.user), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(el.message), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"h2\", _hoisted_32, [_createVNode(_component_center, null, {\n    default: _withCtx(() => [_createTextVNode(\"There is no any articles!\")]),\n    _: 1 /* STABLE */\n  })]))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","id","_createCommentVNode","style","width","src","alt","for","_toDisplayString","$props","_hoisted_1","items","img","title","anons","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_createVNode","_component_center","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","published","_hoisted_26","_hoisted_27","onSubmit","_cache","_withModifiers","args","$options","addMsg","_normalizeClass","error","maxCharacters","type","$data","userInput","$event","placeholder","_hoisted_28","_hoisted_29","msgInput","onClick","msgBtnAdd","comments","length","_createElementBlock","_hoisted_30","_Fragment","_renderList","el","key","deletePost","_hoisted_31","user","message","_hoisted_32"],"sources":["D:\\JS\\JSProjects\\Node JS\\nodejs\\blog\\public\\src\\components\\Item1.vue"],"sourcesContent":["<template>\n  <div>ID: {{ id }}</div>\n  <main class=\"items\">\n    <!-- ---------- Блок статьи ------------ --->\n    <!-- <div class=\"item\" v-for=\"el in items\" :key=\"el.id\"> -->\n    <div>\n      <img v-bind:src=\"this.items.img\" alt=\"\" />\n      <h4>{{ this.items.title }}</h4>\n      <p>{{ this.items.anons }}</p>\n      <!-- <p>{{ this.items.full_text }}</p> -->\n      <div id=\"fulltext\">\n        <!-- {{ this.items.full_text }} -->\n      </div>\n      <!-- ----------  Блок полной статьи --------- -->\n      <br />\n      <h2>Пару слов о С#</h2>\n      <p>\n        C# или \"си-шарп\" – это объектно-ориентированный язык программирования,\n        представленный компанией Microsoft в 2000 году. Он был создан для\n        платформы .NET Framework. Его предназначение – создание приложений для\n        загрузки систем Windows, веб-приложений, мобильных приложений и игр. Но\n        сегодня C# также активно используют для систем безопасности, файловых\n        систем и создания различных продуктов для ОС Android и iOS.\n      </p>\n      <p>\n        Как только начинаешь работать с этим языков, сразу можно определить\n        схожесть его синтаксиса с С и Java. И это неудивительно, ведь “си-шарп”\n        создавался, как конкурент Java, а для работы многое перенял у С. Поэтому\n        несмотря на свой солидный возраст стал неким сыном этих двух языков.\n      </p>\n      <p>\n        Многозадачность C# стала доступной за счет фактически постоянной\n        привязки к фреймворкам. Кроме того, он сочетает в себе простоту\n        использования, гибкость и мощность, а также возможность удобного\n        создания качественного программного обеспечения.\n      </p>\n      <br />\n      <h2>Преимущества Kotlin</h2>\n      <p>\n        <span style=\"color: red\">Kotlin</span> совместим с Java и может работать\n        на платформе JVM, что позволяет использовать существующие библиотеки и\n        инструменты для разработки Android-приложений. А Google официально\n        поддерживает Kotlin для разработки Android-приложений и включил его в\n        Android Studio, что делает его более доступным и удобным для\n        использования разработчиками. Но это далеко не все, что может этот язык\n        программирования. Ниже приведены 4 важных преимущества.\n      </p>\n\n      <center>\n        <img\n          width=\"400px\"\n          src=\"https://itproger.com/img/courses/1683276209.png\"\n          alt=\"\"\n        />\n      </center>\n      <h2>Взаимозаменяемость</h2>\n      <p>\n        Процесс легкости взаимодействия Java и Kotlin прослеживается даже при\n        работе с кодом. Разработчики могут писать код на двух этих языках прямо\n        в одном проекте, и они будут с легкостью компилироваться. Конечный\n        пользователь не сможет понять, что код был написан при использовании\n        сразу и Java, и Kotlin. Никто и не различит в каких участках проекта был\n        использован тот или иной язык.\n      </p>\n      <br />\n      <h2>Простота перехода с одного языка на другой</h2>\n      <p>\n        Kotlin оснащен статической типизацией от JetBrains и является не просто\n        заменой Java, а его улучшенной версией. Поэтому если вы отлично знаете\n        Java, вы с легкостью сможете перейти на Kotlin. Весь процесс изучения\n        языка не будет загроможден множеством непонятных аспектов. Синтаксис\n        очень схож, алгоритмы тоже, а значит даже без малейших знаний Kotlin, вы\n        не растеряетесь и сможете быстро разобраться.\n      </p>\n      <center>\n        <img\n          width=\"400px\"\n          src=\"https://itproger.com/img/courses/1683276106.png\"\n          alt=\"\"\n        />\n      </center>\n      <br />\n      <h2>Поддержка <span style=\"color: red\"> Android Studio</span></h2>\n      <p>\n        С помощью Kotlin и других языков был написан Android Studio. Также для\n        его создания был использован еще один продукт JetBrains – IntelliJ IDEA.\n        Собственно понятно, что у Kotlin будет отличная поддержка Android\n        Studio. Как только вы загрузите и установите плагин этого языка\n        программирования, с помощью Android Studio можно будет произвести сразу\n        все необходимые настройки. При этом все это будет сделать очень легко.\n      </p>\n      <br />\n      <h2>Более краткий и понятный код</h2>\n      <p>\n        Одним из основных преимуществ Kotlin является его выразительность и\n        удобный синтаксис, который делает код более читаемым и понятным. Kotlin\n        также предоставляет более безопасный код и предотвращает некоторые\n        ошибки, которые могут возникнуть при использовании Java. Кроме того,\n        ошибок в Kotlin на порядок меньше, ввиду более короткого кода. При этом\n        результат работы с двумя языками будет одинаков, но там где краткость,\n        там и намного меньше хлопот в работе разработчика. Поэтому создание\n        любого стандартного кода на Kotlin будет более приятным, чем работа с\n        другими языками программирования, требующими большого количества слов.\n      </p>\n      <hr />\n      <p>{{ this.items.published }}</p>\n      <!-- <button type=\"button\" class=\"btnDetails\">Details</button> -->\n    </div>\n  </main>\n  <section class=\"comments\">\n    <div>\n      <h2>Leave some comments</h2>\n      <!-- <form @submit.prevent=\"createPost\" :class=\"{ error: maxCharacters > 20 }\"> -->\n      <form @submit.prevent=\"addMsg\" :class=\"{ error: maxCharacters > 100 }\">\n        <!-- <form> -->\n        <input\n          type=\"text\"\n          v-model=\"userInput\"\n          placeholder=\"Enter You Name\"\n          id=\"user\"\n        /><br />\n        <label for=\"msg\"\n          >Max text: <span>{{ maxCharacters }} / 100</span></label\n        >\n        <textarea\n          v-model=\"msgInput\"\n          placeholder=\"Enter some message\"\n          id=\"msg\"\n        />\n        <button type=\"button\" class=\"btnAdd\" @click=\"addMsg\">\n          {{ msgBtnAdd }}\n        </button>\n      </form>\n    </div>\n\n    <div v-if=\"comments.length > 0\" id=\"articles\">\n      <!-- Перебираем массив, получаем эл-т, индекс и выводим каждый элемент -->\n      <h2>\n        Comments ( <span>{{ comments.length }}</span> )\n      </h2>\n      <div class=\"list-item\" v-for=\"el in comments\" :key=\"el.id\">\n        <button @click=\"deletePost(el)\">Delete</button>\n        <!-- <p>\n          {{ el.message }} <span>{{ el.user }}</span>\n        </p> -->\n        <h4>{{ el.user }}</h4>\n        <p>{{ el.message }}</p>\n      </div>\n    </div>\n    <h2 v-else class=\"empty\">\n      <center>There is no any articles!</center>\n    </h2>\n  </section>\n</template>\n\n<!-- ---------- vue - приложение -------------- -->\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      items: [],\n      comments: [],\n      comm: [],\n      userInput: \"\",\n      msgInput: \"\",\n      msgBtnAdd: \"Add Item\",\n    };\n  },\n\n  // Во vue.config.js сказали, что вместо 'api/'\n  // подставляем 'http://localhost:3000'\n  // переходим на главную страницу нашего api-приложения\n  async mounted() {\n    const result = await axios.get(\"/api/blog-item/\" + this.id);\n    this.items = result.data;\n\n    const res = await axios.get(\"/api/blog-item/msg/\" + this.id);\n    this.comments = res.data;\n    console.log(this.id);\n    console.log(this.items);\n    console.log(this.comments);\n    // console.log(this.items.full_text);\n\n    const fullTextBlock = document.querySelector(\"#fulltext\");\n    fullTextBlock.innerHTML = this.items.full_text;\n  },\n  methods: {\n    // Удаление записей\n    async deletePost(el) {\n      await axios.delete(\"/api/blog-item/msg/\" + el._id);\n      // обращаемся к массиву и обрезаем, начиная с индекса 'i' - один элемент\n      // this.comments.splice(i, 1);\n      // console.log(`element: ${el}, id: ${i}`);\n      this.comments = this.comments.filter((item) => item._id != el._id);\n      console.log(el);\n      console.log(el._id);\n      console.log(this.comm);\n    },\n    // Добавление записей\n    async addMsg() {\n      //let date = Date.now();\n      let url = `/api/blog-item/msg/?user=${this.userInput}&message=${this.msgInput}&item_id=${this.id}`;\n      if (this.userInput !== \"\" && this.msgInput !== \"\") {\n        await axios.post(url);\n        // updateComments();\n        this.comments.push({\n          item_id: this.id,\n          user: this.userInput,\n          message: this.msgInput,\n        });\n        console.log(this.comments);\n        // после ввода, очищаем поля\n        this.userInput = \"\";\n        this.msgInput = \"\";\n      }\n      this.msgBtnAdd = \"Add Item\";\n    },\n  },\n  props: [\"id\"],\n  computed: {\n    // max число введенных символов - 20\n    maxCharacters() {\n      return this.msgInput.length;\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* ---------------- Main ---------------- */\nmain,\n.comments {\n  width: 90%;\n  padding: 20px 5%;\n  margin-bottom: 40px;\n  line-height: 22px;\n  /* display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  transition: width 700ms ease-in-out; */\n}\n/* main .item {\n  width: 380px;\n  background: #f1d1a1;\n  padding: 20px;\n  margin-bottom: 50px;\n  position: relative;\n}\n\nmain .item img {\n  transition: transform 500ms ease;\n}\n\nmain .item:hover img {\n  transform: scale(1.05);\n  cursor: pointer;\n} */\n\nmain h4,\n#fulltext h2 {\n  font-weight: 600;\n  font-size: 26px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  text-align: center;\n  color: #c20909;\n}\n\nmain p,\n#fulltext p {\n  margin-top: 10px;\n  margin-bottom: 5px;\n  /* color: #c20909; */\n}\n\n.item button {\n  width: 60%;\n  margin-left: 20%;\n  margin-bottom: 20px;\n  border-radius: 4px;\n  text-align: center;\n  font-size: 16px;\n  /* Выравниваем по центру (по вертикали), указываем line-height = height*/\n  /* line-height: 70px; */\n  /* background: #e79e6d; */\n  background: #a52323;\n  border: 2px solid coral;\n  color: cornsilk;\n  cursor: pointer;\n  transition: all 500ms ease;\n}\n\n.item button:hover {\n  cursor: pointer;\n  background: #cc1f1f;\n  /* background: #e43f3f; */\n}\n\n/* ---------------- Forms ---------------- */\n.list-item {\n  width: 100%;\n  background: #f1d1a1; /*aquamarine; #fcddaf; #dfbc4c*/\n  padding: 10px 15px;\n  margin-top: 10px;\n  border: 1px solid silver;\n  border-radius: 5px;\n  font-size: 14px;\n}\n\n.list-item p {\n  margin-bottom: 8px;\n}\n\n.list-item p span {\n  float: right;\n  font-size: 12px;\n  color: #8f772d;\n}\n\n.list-item p:last-child {\n  color: #b1953c;\n  font-size: 11px;\n}\n\n.list-item button {\n  /* display: block; */\n  float: right;\n  border: 0;\n  border-radius: 5px;\n  padding: 4px 8px;\n  margin: 0;\n  margin-left: 10px;\n  background: #d15a2a;\n  color: #fddaae;\n  cursor: pointer;\n  font-size: 12px;\n  transition: transform 300ms ease;\n}\n\n/* ---------- Блок формы ------------------ */\nform input,\nform textarea {\n  width: 100%;\n  background: bisque;\n  border-radius: 5px;\n  border: 2px solid burlywood;\n  padding: 8px 10px;\n  font-size: 14px;\n  outline: none;\n  margin-bottom: 20px;\n  margin-top: 3px;\n  resize: none;\n}\n\nform textarea {\n  height: 90px;\n}\n\nform label {\n  font-weight: bold;\n}\n\nform.error label {\n  color: #cf341ff1;\n}\n\nform button {\n  /* float: right; */\n  display: block;\n  /* width: 70px; */\n  background: #d15a2a; /*#f05a23;*/\n  border: 2px solid burlywood;\n  border-radius: 8px;\n  border-bottom-width: 4px;\n  padding: 10px 12px;\n  font-size: 13px;\n  font-weight: bold;\n  color: blanchedalmond;\n  cursor: pointer;\n  transition: all 100ms ease;\n}\n\nform button:hover {\n  margin-top: 2px;\n  border-bottom-width: 2px;\n  background: #f86f3e;\n}\n.btnEdit {\n  background: #348531;\n}\n\n/* ---------- Блок статей ------------------ */\n#articles {\n  margin: 20px;\n}\n\n#articles .post {\n  background: bisque;\n  padding: 20px;\n  margin-bottom: 20px;\n  border: 1px solid burlywood;\n  float: left;\n  width: 100%;\n}\n\n#articles .post button {\n  float: right;\n  background: #f05a23;\n  border: 2px solid burlywood;\n  border-radius: 8px;\n  border-bottom-width: 4px;\n  padding: 10px 12px;\n  font-size: 13px;\n  font-weight: bold;\n  color: blanchedalmond;\n  cursor: pointer;\n  transition: all 100ms ease;\n}\n\n#articles .post button:hover {\n  margin-top: 2px;\n  border-bottom-width: 2px;\n  background: #f86f3e;\n}\n\n.empty {\n  margin: 20px;\n  color: #e60101;\n}\n/* .list-item button:hover {\n  transform: scale(1.1);\n} */\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}