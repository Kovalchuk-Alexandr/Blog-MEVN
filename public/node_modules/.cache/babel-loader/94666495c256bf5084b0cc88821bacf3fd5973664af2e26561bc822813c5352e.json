{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      items: [],\n      title: \"\",\n      user: \"\",\n      msgBtnAdd: \"Add Item\",\n      isNew: true\n    };\n  },\n  // Во vue.config.js сказали, что вместо 'api/'\n  // подставляем 'http://localhost:3000'\n  // переходим на главную страницу нашего api-приложения\n  async mounted() {\n    const result = await axios.get(\"/api/todo-item\");\n    this.items = result.data;\n  },\n  methods: {\n    // Удаление записей\n    async deleteItem(el, i) {\n      await axios.delete(\"/api/todo-item/\" + el._id);\n      // обращаемся к массиву и обрезаем, начиная с индекса 'i' - один элемент\n      this.items.splice(i, 1);\n    },\n    // Добавление записей\n    async addItem(el, i) {\n      let date = Date.now();\n      let url = `/api/todo-item/?title=${this.title}&user=${this.user}&published=${date}`;\n      // так не сработает, нужно передавать параметры в командной строке (запросе)\n      // const result = await axios.post(\"/api/todo-item/\", {\n      //   title: this.title,\n      //   user: this.user,\n      //   published: Date.now(), //\"2023\",\n      // });\n      if (this.isNew) {\n        await axios.post(url);\n        // Отображаем запись\n        this.items.push({\n          title: this.title,\n          user: this.user,\n          published: date\n        });\n      } else {\n        // await axios.put(url + el._id);\n        console.log(\"Inside Add i: \" + i);\n        console.log(\"this.items.title: \" + this.items[i].title);\n        console.log(\"this.items.user: \" + this.items[i].user);\n      }\n      // Очищаем переменные title, user - и значения внутри input-полей\n      this.title = \"\";\n      this.user = \"\";\n    },\n    // Обновление записей\n    async editItem(el, i) {\n      // let date = Date.now();\n      let btnAdd = document.querySelector(\".btnAdd\");\n      console.log(\"isNew before: \" + this.isNew);\n      this.isNew = false;\n      console.log(\"isNew after: \" + this.isNew);\n      console.log(\"msgBtnAdd: \" + this.msgBtnAdd);\n      console.log(\"btnAdd: \" + btnAdd);\n      this.msgBtnAdd = \"Update\";\n      console.log(\"msgBtnAdd: \" + this.msgBtnAdd);\n      // btnAdd.innerHTML = \"Update\";\n      // let url = `/api/todo-item/?title=${this.title}&user=${this.user}&published=${date}`;\n      //  await axios.post(url);\n      // Отображаем запись\n      // this.items.push({\n      //   title: this.title,\n      //   user: this.user,\n      //   published: date,\n      // });\n      console.log(`el: ${el}, i: ${i}`);\n      // `title: (!(${title}) == '' ? ${title}: '') , this.title: ${this.title}`\n      console.log(`el: ${el}`);\n      console.log(`title: ${el.title}`);\n      console.log(`user: ${el.user}`);\n      console.log(`published: ${el.published}`);\n      this.title = el.title;\n      this.user = el.user;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","items","title","user","msgBtnAdd","isNew","mounted","result","get","methods","deleteItem","el","i","delete","_id","splice","addItem","date","Date","now","url","post","push","published","console","log","editItem","btnAdd","document","querySelector"],"sources":["D:\\JS\\JSProjects\\Node JS\\nodejs\\mevn\\public\\src\\App.vue"],"sourcesContent":["<template>\n  <main>\n    <div>\n      <h2>Todo Form</h2>\n      <form>\n        <input\n          type=\"text\"\n          v-model=\"title\"\n          placeholder=\"What do you want to do?\"\n        />\n        <input type=\"text\" v-model=\"user\" placeholder=\"Enter You Login\" />\n        <button type=\"button\" class=\"btnAdd\" @click=\"addItem(el, i)\">\n          {{ msgBtnAdd }}\n        </button>\n      </form>\n    </div>\n    <div>\n      <h2>To do list</h2>\n      <!-- Перебираем массив, получаем эл-т, индекс и выводим каждый элемент -->\n      <div class=\"list-item\" v-for=\"(el, i) in items\" :key=\"el._id\">\n        <p>\n          {{ el.title }} <span>{{ el.user }}</span>\n        </p>\n        <!-- <p>{{ el.user }}</p> -->\n        <p>\n          {{ el.published }}\n          <button @click=\"deleteItem(el, i)\">Delete</button>\n          <button class=\"btnEdit\" @click=\"editItem(el, i)\">Edit</button>\n        </p>\n      </div>\n    </div>\n  </main>\n</template>\n\n<!-- ---------- vue - приложение -------------- -->\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      items: [],\n      title: \"\",\n      user: \"\",\n      msgBtnAdd: \"Add Item\",\n      isNew: true,\n    };\n  },\n\n  // Во vue.config.js сказали, что вместо 'api/'\n  // подставляем 'http://localhost:3000'\n  // переходим на главную страницу нашего api-приложения\n  async mounted() {\n    const result = await axios.get(\"/api/todo-item\");\n    this.items = result.data;\n  },\n  methods: {\n    // Удаление записей\n    async deleteItem(el, i) {\n      await axios.delete(\"/api/todo-item/\" + el._id);\n      // обращаемся к массиву и обрезаем, начиная с индекса 'i' - один элемент\n      this.items.splice(i, 1);\n    },\n    // Добавление записей\n    async addItem(el, i) {\n      let date = Date.now();\n      let url = `/api/todo-item/?title=${this.title}&user=${this.user}&published=${date}`;\n      // так не сработает, нужно передавать параметры в командной строке (запросе)\n      // const result = await axios.post(\"/api/todo-item/\", {\n      //   title: this.title,\n      //   user: this.user,\n      //   published: Date.now(), //\"2023\",\n      // });\n      if (this.isNew) {\n        await axios.post(url);\n        // Отображаем запись\n        this.items.push({\n          title: this.title,\n          user: this.user,\n          published: date,\n        });\n      } else {\n        // await axios.put(url + el._id);\n        console.log(\"Inside Add i: \" + i);\n        console.log(\"this.items.title: \" + this.items[i].title);\n        console.log(\"this.items.user: \" + this.items[i].user);\n      }\n      // Очищаем переменные title, user - и значения внутри input-полей\n      this.title = \"\";\n      this.user = \"\";\n    },\n    // Обновление записей\n    async editItem(el, i) {\n      // let date = Date.now();\n      let btnAdd = document.querySelector(\".btnAdd\");\n      console.log(\"isNew before: \" + this.isNew);\n      this.isNew = false;\n      console.log(\"isNew after: \" + this.isNew);\n      console.log(\"msgBtnAdd: \" + this.msgBtnAdd);\n      console.log(\"btnAdd: \" + btnAdd);\n\n      this.msgBtnAdd = \"Update\";\n      console.log(\"msgBtnAdd: \" + this.msgBtnAdd);\n      // btnAdd.innerHTML = \"Update\";\n      // let url = `/api/todo-item/?title=${this.title}&user=${this.user}&published=${date}`;\n      //  await axios.post(url);\n      // Отображаем запись\n      // this.items.push({\n      //   title: this.title,\n      //   user: this.user,\n      //   published: date,\n      // });\n      console.log(`el: ${el}, i: ${i}`);\n      // `title: (!(${title}) == '' ? ${title}: '') , this.title: ${this.title}`\n      console.log(`el: ${el}`);\n      console.log(`title: ${el.title}`);\n      console.log(`user: ${el.user}`);\n      console.log(`published: ${el.published}`);\n\n      this.title = el.title;\n      this.user = el.user;\n    },\n  },\n};\n</script>\n\n<style>\n.list-item {\n  width: 100%;\n  background: aquamarine; /*#fcddaf; #dfbc4c*/\n  padding: 10px 15px;\n  margin-top: 10px;\n  border: 1px solid silver;\n  border-radius: 5px;\n  font-size: 14px;\n}\n\n.list-item p {\n  margin-bottom: 8px;\n}\n\n.list-item p span {\n  float: right;\n  font-size: 12px;\n  color: #8f772d;\n}\n\n.list-item p:last-child {\n  color: #b1953c;\n  font-size: 11px;\n}\n\n.list-item button {\n  /* display: block; */\n  float: right;\n  border: 0;\n  border-radius: 5px;\n  padding: 4px 8px;\n  margin: 0;\n  margin-left: 10px;\n  color: #fddaae;\n  cursor: pointer;\n  font-size: 12px;\n  /* transition: transform 300ms ease; */\n}\n\n.btnEdit {\n  background: #348531;\n}\n\n/* .list-item button:hover {\n  transform: scale(1.1);\n} */\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}