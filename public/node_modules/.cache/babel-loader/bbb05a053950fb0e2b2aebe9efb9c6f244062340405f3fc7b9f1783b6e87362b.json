{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createBlock as _createBlock, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"items\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Todo Form\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"To do list\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"(img/{{ el.img }})\",\n  alt: \"\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Item1 = _resolveComponent(\"Item1\");\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [$data.isVisible ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($data.items, el => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"item\",\n      key: el.id\n    }, [_createElementVNode(\"img\", {\n      src: el.img,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_2), _createCommentVNode(\" <img src=\\\"../public/img/1680541818.jpg\\\" alt=\\\"\\\" /> \"), _createElementVNode(\"p\", null, _toDisplayString(el.img), 1 /* TEXT */), _createElementVNode(\"h4\", null, _toDisplayString(el.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(el.anons), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(el.published), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: _cache[0] || (_cache[0] = $event => this.isVisible = !this.isVisible),\n      type: \"button\",\n      class: \"btnDetails\"\n    }, \" Details \"), _createCommentVNode(\" <div class=\\\"add-to-cart\\\" onclick=\\\"addToCart(${item.id})\\\">\\n        <i class=\\\"fa-solid fa-cart-plus\\\"></i>\\n      </div> \")]);\n  }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), !$data.isVisible ? (_openBlock(), _createBlock(_component_Item1, {\n    key: 1\n  })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", null, [_hoisted_3, _createElementVNode(\"form\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.title = $event),\n    placeholder: \"What do you want to do?\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.title]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.user = $event),\n    placeholder: \"Enter You Login\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btnAdd\",\n    onClick: _cache[3] || (_cache[3] = $event => $options.addItem($data.el, $data.i))\n  }, _toDisplayString($data.msgBtnAdd), 1 /* TEXT */)])]), _createElementVNode(\"div\", null, [_hoisted_4, _createCommentVNode(\" Перебираем массив, получаем эл-т, индекс и выводим каждый элемент \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, el => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"list-item\",\n      key: el._id\n    }, [_hoisted_5, _createElementVNode(\"p\", null, _toDisplayString(el.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(el.anons), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(el.published), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","src","alt","_createElementBlock","_hoisted_1","$data","isVisible","_Fragment","key","_renderList","items","el","id","img","_createCommentVNode","_toDisplayString","title","anons","published","onClick","_cache","$event","type","_createBlock","_component_Item1","_hoisted_3","placeholder","user","$options","addItem","i","msgBtnAdd","_hoisted_4","_id","_hoisted_5"],"sources":["D:\\JS\\JSProjects\\Node JS\\nodejs\\blog\\public\\src\\App.vue"],"sourcesContent":["<template>\n  <main class=\"items\">\n    <div v-if=\"isVisible\" class=\"item\" v-for=\"el in items\" :key=\"el.id\">\n      <img v-bind:src=\"el.img\" alt=\"\" />\n      <!-- <img src=\"../public/img/1680541818.jpg\" alt=\"\" /> -->\n      <p>{{ el.img }}</p>\n      <h4>{{ el.title }}</h4>\n      <p>{{ el.anons }}</p>\n      <p>{{ el.published }}</p>\n      <button\n        @click=\"this.isVisible = !this.isVisible\"\n        type=\"button\"\n        class=\"btnDetails\"\n      >\n        Details\n      </button>\n      <!-- <div class=\"add-to-cart\" onclick=\"addToCart(${item.id})\">\n        <i class=\"fa-solid fa-cart-plus\"></i>\n      </div> -->\n    </div>\n\n    <Item1 v-if=\"!isVisible\" />\n\n    <div>\n      <h2>Todo Form</h2>\n      <form>\n        <input\n          type=\"text\"\n          v-model=\"title\"\n          placeholder=\"What do you want to do?\"\n        />\n        <input type=\"text\" v-model=\"user\" placeholder=\"Enter You Login\" />\n        <button type=\"button\" class=\"btnAdd\" @click=\"addItem(el, i)\">\n          {{ msgBtnAdd }}\n        </button>\n      </form>\n    </div>\n    <div>\n      <h2>To do list</h2>\n      <!-- Перебираем массив, получаем эл-т, индекс и выводим каждый элемент -->\n      <div class=\"list-item\" v-for=\"el in items\" :key=\"el._id\">\n        <img src=\"(img/{{ el.img }})\" alt=\"\" />\n        <p>{{ el.title }}</p>\n        <p>{{ el.anons }}</p>\n        <p>{{ el.published }}</p>\n      </div>\n    </div>\n  </main>\n</template>\n\n<!-- ---------- vue - приложение -------------- -->\n<script>\nimport axios from \"axios\";\nimport Item1 from \"./components/Item1.vue\";\n\nexport default {\n  name: \"App\",\n  components: {\n    Item1,\n  },\n  data() {\n    return {\n      items: [],\n      isVisible: true,\n      title: \"\",\n      user: \"\",\n      msgBtnAdd: \"Add Item\",\n      isNew: true,\n      el: {},\n      i: 0,\n      id: 0,\n    };\n  },\n\n  // Во vue.config.js сказали, что вместо 'api/'\n  // подставляем 'http://localhost:3000'\n  // переходим на главную страницу нашего api-приложения\n  async mounted() {\n    const result = await axios.get(\"/api/blog-item\");\n    this.items = result.data;\n  },\n  methods: {\n    // Удаление записей\n    async deleteItem(el, i) {\n      await axios.delete(\"/api/blog-item/\" + el._id);\n      // обращаемся к массиву и обрезаем, начиная с индекса 'i' - один элемент\n      this.items.splice(i, 1);\n    },\n    // Добавление записей\n    async addItem() {\n      let date = Date.now();\n      let url = `/api/blog-item/?title=${this.title}&user=${this.user}&published=${date}`;\n      // так не сработает, нужно передавать параметры в командной строке (запросе)\n      // const result = await axios.post(\"/api/todo-item/\", {\n      //   title: this.title,\n      //   user: this.user,\n      //   published: Date.now(), //\"2023\",\n      // });\n      if (this.isNew) {\n        await axios.post(url);\n        // Отображаем запись\n        this.items.push({\n          title: this.title,\n          user: this.user,\n          published: date,\n        });\n      } else {\n        // await axios.put(url + this.id);\n        await axios.post(url);\n        // console.log(\"Inside Add i: \" + i);\n        console.log(\"el.title: \" + this.el.title);\n        // console.log(\"this.items.user: \" + this.items[i].user);\n        console.log(\"this.title: \" + this.title);\n        console.log(\"this.user: \" + this.user);\n        console.log(\"date: \" + date);\n        this.el.title = this.title;\n        this.el.user = this.user;\n        this.el.published = date;\n\n        this.msgBtnAdd = \"Add Item\";\n      }\n      // Очищаем переменные title, user - и значения внутри input-полей\n      this.title = \"\";\n      this.user = \"\";\n    },\n    // Обновление записей\n    async editItem(el, i) {\n      // let date = Date.now();\n      this.el = el;\n      this.i = i;\n      this.id = el._id;\n      this.isNew = false;\n      console.log(\"isNew after: \" + this.isNew);\n      console.log(\"msgBtnAdd: \" + this.msgBtnAdd);\n\n      this.msgBtnAdd = \"Update\";\n      console.log(\"msgBtnAdd: \" + this.msgBtnAdd);\n      console.log(\"this.el: \");\n      console.log(this.el);\n      console.log(\"this.i: \" + this.i);\n      console.log(\"this.id: \" + this.id);\n      // btnAdd.innerHTML = \"Update\";\n      // let url = `/api/todo-item/?title=${this.title}&user=${this.user}&published=${date}`;\n      //  await axios.post(url);\n      // Отображаем запись\n      // this.items.push({\n      //   title: this.title,\n      //   user: this.user,\n      //   published: date,\n      // });\n      // console.log(`el: ${el}, i: ${i}`);\n      // `title: (!(${title}) == '' ? ${title}: '') , this.title: ${this.title}`\n      console.log(`el: ${el}`);\n      console.log(`title: ${el.title}`);\n      console.log(`user: ${el.user}`);\n      console.log(`published: ${el.published}`);\n\n      this.title = el.title;\n      this.user = el.user;\n    },\n  },\n};\n</script>\n\n<style>\n.item button {\n  width: 60%;\n  margin-left: 20%;\n  margin-bottom: 20px;\n  border-radius: 4px;\n  text-align: center;\n  font-size: 16px;\n  /* Выравниваем по центру (по вертикали), указываем line-height = height*/\n  /* line-height: 70px; */\n  /* background: #e79e6d; */\n  background: #a52323;\n  border: 2px solid coral;\n  color: cornsilk;\n  cursor: pointer;\n  transition: all 500ms ease;\n}\n\n.item button:hover {\n  cursor: pointer;\n  background: #cc1f1f;\n  /* background: #e43f3f; */\n}\n.list-item {\n  width: 100%;\n  background: aquamarine; /*#fcddaf; #dfbc4c*/\n  padding: 10px 15px;\n  margin-top: 10px;\n  border: 1px solid silver;\n  border-radius: 5px;\n  font-size: 14px;\n}\n\n.list-item p {\n  margin-bottom: 8px;\n}\n\n.list-item p span {\n  float: right;\n  font-size: 12px;\n  color: #8f772d;\n}\n\n.list-item p:last-child {\n  color: #b1953c;\n  font-size: 11px;\n}\n\n.list-item button {\n  /* display: block; */\n  float: right;\n  border: 0;\n  border-radius: 5px;\n  padding: 4px 8px;\n  margin: 0;\n  margin-left: 10px;\n  color: #fddaae;\n  cursor: pointer;\n  font-size: 12px;\n  /* transition: transform 300ms ease; */\n}\n\n.btnEdit {\n  background: #348531;\n}\n\n/* .list-item button:hover {\n  transform: scale(1.1);\n} */\n</style>\n"],"mappings":";;EACQA,KAAK,EAAC;AAAO;;gCAuBfC,mBAAA,CAAkB,YAAd,WAAS;gCAcbA,mBAAA,CAAmB,YAAf,YAAU;gCAGZA,mBAAA,CAAuC;EAAlCC,GAAG,EAAC,oBAAoB;EAACC,GAAG,EAAC;;;;;uBAxCxCC,mBAAA,CA8CO,QA9CPC,UA8CO,GA7CMC,KAAA,CAAAC,SAAS,I,kBAApBH,mBAAA,CAiBMI,SAAA;IAAAC,GAAA;EAAA,GAAAC,WAAA,CAjB0CJ,KAAA,CAAAK,KAAK,EAAXC,EAAE;yBAA5CR,mBAAA,CAiBM;MAjBgBJ,KAAK,EAAC,MAAM;MAAsBS,GAAG,EAAEG,EAAE,CAACC;QAC9DZ,mBAAA,CAAkC;MAAtBC,GAAG,EAAEU,EAAE,CAACE,GAAG;MAAEX,GAAG,EAAC;yCAC7BY,mBAAA,2DAA0D,EAC1Dd,mBAAA,CAAmB,WAAAe,gBAAA,CAAbJ,EAAE,CAACE,GAAG,kBACZb,mBAAA,CAAuB,YAAAe,gBAAA,CAAhBJ,EAAE,CAACK,KAAK,kBACfhB,mBAAA,CAAqB,WAAAe,gBAAA,CAAfJ,EAAE,CAACM,KAAK,kBACdjB,mBAAA,CAAyB,WAAAe,gBAAA,CAAnBJ,EAAE,CAACO,SAAS,kBAClBlB,mBAAA,CAMS;MALNmB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,SAAOf,SAAS,SAASA,SAAS;MACxCgB,IAAI,EAAC,QAAQ;MACbvB,KAAK,EAAC;OACP,WAED,GACAe,mBAAA,kIAEU,C;uEAGET,KAAA,CAAAC,SAAS,I,cAAvBiB,YAAA,CAA2BC,gBAAA;IAAAhB,GAAA;EAAA,M,mCAE3BR,mBAAA,CAaM,cAZJyB,UAAkB,EAClBzB,mBAAA,CAUO,e,gBATLA,mBAAA,CAIE;IAHAsB,IAAI,EAAC,MAAM;+DACFjB,KAAA,CAAAW,KAAK,GAAAK,MAAA;IACdK,WAAW,EAAC;iDADHrB,KAAA,CAAAW,KAAK,E,mBAGhBhB,mBAAA,CAAkE;IAA3DsB,IAAI,EAAC,MAAM;+DAAUjB,KAAA,CAAAsB,IAAI,GAAAN,MAAA;IAAEK,WAAW,EAAC;iDAAlBrB,KAAA,CAAAsB,IAAI,E,GAChC3B,mBAAA,CAES;IAFDsB,IAAI,EAAC,QAAQ;IAACvB,KAAK,EAAC,QAAQ;IAAEoB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEO,QAAA,CAAAC,OAAO,CAACxB,KAAA,CAAAM,EAAE,EAAEN,KAAA,CAAAyB,CAAC;sBACrDzB,KAAA,CAAA0B,SAAS,iB,KAIlB/B,mBAAA,CASM,cARJgC,UAAmB,EACnBlB,mBAAA,uEAA0E,G,kBAC1EX,mBAAA,CAKMI,SAAA,QAAAE,WAAA,CAL8BJ,KAAA,CAAAK,KAAK,EAAXC,EAAE;yBAAhCR,mBAAA,CAKM;MALDJ,KAAK,EAAC,WAAW;MAAsBS,GAAG,EAAEG,EAAE,CAACsB;QAClDC,UAAuC,EACvClC,mBAAA,CAAqB,WAAAe,gBAAA,CAAfJ,EAAE,CAACK,KAAK,kBACdhB,mBAAA,CAAqB,WAAAe,gBAAA,CAAfJ,EAAE,CAACM,KAAK,kBACdjB,mBAAA,CAAyB,WAAAe,gBAAA,CAAnBJ,EAAE,CAACO,SAAS,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}