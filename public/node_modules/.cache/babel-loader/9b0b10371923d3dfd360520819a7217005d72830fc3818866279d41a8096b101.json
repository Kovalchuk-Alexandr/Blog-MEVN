{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"To do list\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\"\n}, \"Add Item\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"To do list\", -1 /* HOISTED */);\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"main\", null, [_createElementVNode(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.title = $event),\n    placeholder: \"What do you want to do?\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.title]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.user = $event),\n    placeholder: \"Enter You Login\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user]]), _hoisted_2])]), _createElementVNode(\"div\", null, [_hoisted_3, _createCommentVNode(\" Перебираем массив, получаем эл-т, индекс и выводим каждый элемент \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, (el, i) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"list-item\",\n      key: el._id\n    }, [_createElementVNode(\"p\", null, [_createTextVNode(_toDisplayString(el.title) + \" \", 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(el.user), 1 /* TEXT */)]), _createCommentVNode(\" <p>{{ el.user }}</p> \"), _createElementVNode(\"p\", null, [_createTextVNode(_toDisplayString(el.published) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteItem(el, i)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_4)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","_hoisted_1","$data","title","$event","placeholder","user","_hoisted_2","_hoisted_3","_createCommentVNode","_Fragment","_renderList","items","el","i","class","key","_id","_toDisplayString","published","onClick","$options","deleteItem","_hoisted_4"],"sources":["D:\\JS\\JSProjects\\Node JS\\nodejs\\mevn\\public\\src\\App.vue"],"sourcesContent":["<template>\n  <main>\n    <div>\n      <h2>To do list</h2>\n      <form>\n        <input\n          type=\"text\"\n          v-model=\"title\"\n          placeholder=\"What do you want to do?\"\n        />\n        <input type=\"text\" v-model=\"user\" placeholder=\"Enter You Login\" />\n        <button type=\"button\">Add Item</button>\n      </form>\n    </div>\n    <div>\n      <h2>To do list</h2>\n      <!-- Перебираем массив, получаем эл-т, индекс и выводим каждый элемент -->\n      <div class=\"list-item\" v-for=\"(el, i) in items\" :key=\"el._id\">\n        <p>\n          {{ el.title }} <span>{{ el.user }}</span>\n        </p>\n        <!-- <p>{{ el.user }}</p> -->\n        <p>\n          {{ el.published }} <button @click=\"deleteItem(el, i)\">Delete</button>\n        </p>\n      </div>\n    </div>\n  </main>\n</template>\n\n<!-- ---------- vue - приложение -------------- -->\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      items: [],\n      title: \"\",\n      user: \"\",\n    };\n  },\n\n  // Во vue.config.js сказали, что вместо 'api/'\n  // подставляем 'http://localhost:3000'\n  // переходим на главную страницу нашего api-приложения\n  async mounted() {\n    const result = await axios.get(\"/api/todo-item\");\n    this.items = result.data;\n  },\n  methods: {\n    async deleteItem(el, i) {\n      await axios.delete(\"/api/todo-item/\" + el._id);\n      // обращаемся к массиву и обрезаем, начиная с индекса 'i' - один элемент\n      this.items.splice(i, 1);\n    },\n  },\n};\n</script>\n\n<style>\n.list-item {\n  width: 100%;\n  background: aquamarine; /*#fcddaf; #dfbc4c*/\n  padding: 10px 15px;\n  margin-top: 20px;\n  border: 1px solid silver;\n  border-radius: 5px;\n  font-size: 14px;\n}\n\n.list-item p {\n  margin-bottom: 5px;\n}\n\n.list-item p span {\n  float: right;\n  font-size: 12px;\n  color: #8f772d;\n}\n\n.list-item p:last-child {\n  color: #b1953c;\n  font-size: 11px;\n}\n\n.list-item button {\n  /* display: block; */\n  float: right;\n  border: 0;\n  border-radius: 5px;\n  padding: 4px 8px;\n  margin: 0;\n  color: #fddaae;\n  cursor: pointer;\n  font-size: 12px;\n  /* transition: transform 300ms ease; */\n}\n\n/* .list-item button:hover {\n  transform: scale(1.1);\n} */\n</style>\n"],"mappings":";gCAGMA,mBAAA,CAAmB,YAAf,YAAU;gCAQZA,mBAAA,CAAuC;EAA/BC,IAAI,EAAC;AAAQ,GAAC,UAAQ;gCAIhCD,mBAAA,CAAmB,YAAf,YAAU;;;uBAdlBE,mBAAA,CA0BO,eAzBLF,mBAAA,CAWM,cAVJG,UAAmB,EACnBH,mBAAA,CAQO,e,gBAPLA,mBAAA,CAIE;IAHAC,IAAI,EAAC,MAAM;+DACFG,KAAA,CAAAC,KAAK,GAAAC,MAAA;IACdC,WAAW,EAAC;iDADHH,KAAA,CAAAC,KAAK,E,mBAGhBL,mBAAA,CAAkE;IAA3DC,IAAI,EAAC,MAAM;+DAAUG,KAAA,CAAAI,IAAI,GAAAF,MAAA;IAAEC,WAAW,EAAC;iDAAlBH,KAAA,CAAAI,IAAI,E,GAChCC,UAAuC,C,KAG3CT,mBAAA,CAYM,cAXJU,UAAmB,EACnBC,mBAAA,uEAA0E,G,kBAC1ET,mBAAA,CAQMU,SAAA,QAAAC,WAAA,CARmCT,KAAA,CAAAU,KAAK,GAAfC,EAAE,EAAEC,CAAC;yBAApCd,mBAAA,CAQM;MARDe,KAAK,EAAC,WAAW;MAA2BC,GAAG,EAAEH,EAAE,CAACI;QACvDnB,mBAAA,CAEI,Y,kCADCe,EAAE,CAACV,KAAK,IAAG,GAAC,iBAAAL,mBAAA,CAA0B,cAAAoB,gBAAA,CAAjBL,EAAE,CAACP,IAAI,iB,GAEjCG,mBAAA,0BAA6B,EAC7BX,mBAAA,CAEI,Y,kCADCe,EAAE,CAACM,SAAS,IAAG,GAAC,iBAAArB,mBAAA,CAAkD;MAAzCsB,OAAK,EAAAhB,MAAA,IAAEiB,QAAA,CAAAC,UAAU,CAACT,EAAE,EAAEC,CAAC;OAAG,QAAM,iBAAAS,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}