{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport Item1 from \"./components/Item1.vue\";\nexport default {\n  name: \"App\",\n  components: {\n    Item1\n  },\n  data() {\n    return {\n      items: [],\n      isVisible: true,\n      title: \"\",\n      user: \"\",\n      msgBtnAdd: \"Add Item\",\n      isNew: true,\n      el: {},\n      i: 0,\n      id: 0\n    };\n  },\n  // Во vue.config.js сказали, что вместо 'api/'\n  // подставляем 'http://localhost:3000'\n  // переходим на главную страницу нашего api-приложения\n  async mounted() {\n    const result = await axios.get(\"/api/blog-item\");\n    this.items = result.data;\n  },\n  methods: {\n    // Удаление записей\n    async deleteItem(el, i) {\n      await axios.delete(\"/api/blog-item/\" + el._id);\n      // обращаемся к массиву и обрезаем, начиная с индекса 'i' - один элемент\n      this.items.splice(i, 1);\n    },\n    // Добавление записей\n    async addItem() {\n      let date = Date.now();\n      let url = `/api/blog-item/?title=${this.title}&user=${this.user}&published=${date}`;\n      // так не сработает, нужно передавать параметры в командной строке (запросе)\n      // const result = await axios.post(\"/api/todo-item/\", {\n      //   title: this.title,\n      //   user: this.user,\n      //   published: Date.now(), //\"2023\",\n      // });\n      if (this.isNew) {\n        await axios.post(url);\n        // Отображаем запись\n        this.items.push({\n          title: this.title,\n          user: this.user,\n          published: date\n        });\n      } else {\n        // await axios.put(url + this.id);\n        await axios.post(url);\n        // console.log(\"Inside Add i: \" + i);\n        console.log(\"el.title: \" + this.el.title);\n        // console.log(\"this.items.user: \" + this.items[i].user);\n        console.log(\"this.title: \" + this.title);\n        console.log(\"this.user: \" + this.user);\n        console.log(\"date: \" + date);\n        this.el.title = this.title;\n        this.el.user = this.user;\n        this.el.published = date;\n        this.msgBtnAdd = \"Add Item\";\n      }\n      // Очищаем переменные title, user - и значения внутри input-полей\n      this.title = \"\";\n      this.user = \"\";\n    },\n    // Обновление записей\n    async editItem(el, i) {\n      // let date = Date.now();\n      this.el = el;\n      this.i = i;\n      this.id = el._id;\n      this.isNew = false;\n      console.log(\"isNew after: \" + this.isNew);\n      console.log(\"msgBtnAdd: \" + this.msgBtnAdd);\n      this.msgBtnAdd = \"Update\";\n      console.log(\"msgBtnAdd: \" + this.msgBtnAdd);\n      console.log(\"this.el: \");\n      console.log(this.el);\n      console.log(\"this.i: \" + this.i);\n      console.log(\"this.id: \" + this.id);\n      // btnAdd.innerHTML = \"Update\";\n      // let url = `/api/todo-item/?title=${this.title}&user=${this.user}&published=${date}`;\n      //  await axios.post(url);\n      // Отображаем запись\n      // this.items.push({\n      //   title: this.title,\n      //   user: this.user,\n      //   published: date,\n      // });\n      // console.log(`el: ${el}, i: ${i}`);\n      // `title: (!(${title}) == '' ? ${title}: '') , this.title: ${this.title}`\n      console.log(`el: ${el}`);\n      console.log(`title: ${el.title}`);\n      console.log(`user: ${el.user}`);\n      console.log(`published: ${el.published}`);\n      this.title = el.title;\n      this.user = el.user;\n    }\n  }\n};","map":{"version":3,"names":["axios","Item1","name","components","data","items","isVisible","title","user","msgBtnAdd","isNew","el","i","id","mounted","result","get","methods","deleteItem","delete","_id","splice","addItem","date","Date","now","url","post","push","published","console","log","editItem"],"sources":["D:\\JS\\JSProjects\\Node JS\\nodejs\\blog\\public\\src\\App.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"!isVisible\"\n    @click=\"this.isVisible = !this.isVisible\"\n    class=\"btnBack\"\n  >\n    Back to list\n  </div>\n  <main class=\"items\" v-if=\"isVisible\">\n    <!-- <div v-if=\"isVisible\"> -->\n    <div class=\"item\" v-for=\"el in items\" :key=\"el.id\">\n      <img v-bind:src=\"el.img\" alt=\"\" />\n      <!-- <img src=\"../public/img/1680541818.jpg\" alt=\"\" /> -->\n      <p>{{ el.img }}</p>\n      <h4>{{ el.title }}</h4>\n      <p>{{ el.anons }}</p>\n      <p>{{ el.published }}</p>\n      <button\n        @click=\"this.isVisible = !this.isVisible\"\n        type=\"button\"\n        class=\"btnDetails\"\n      >\n        Details\n      </button>\n      <!-- <div class=\"add-to-cart\" onclick=\"addToCart(${item.id})\">\n        <i class=\"fa-solid fa-cart-plus\"></i>\n      </div> -->\n    </div>\n    <!-- </div> -->\n  </main>\n  <Item1 v-if=\"!isVisible\" />\n\n  <!-- <div>\n    <h2>Todo Form</h2>\n    <form>\n      <input\n        type=\"text\"\n        v-model=\"title\"\n        placeholder=\"What do you want to do?\"\n      />\n      <input type=\"text\" v-model=\"user\" placeholder=\"Enter You Login\" />\n      <button type=\"button\" class=\"btnAdd\" @click=\"addItem(el, i)\">\n        {{ msgBtnAdd }}\n      </button>\n    </form>\n  </div> -->\n  <div>\n    <h2>To do list</h2>\n    <!-- Перебираем массив, получаем эл-т, индекс и выводим каждый элемент -->\n    <div class=\"list-item\" v-for=\"el in items\" :key=\"el._id\">\n      <img src=\"(img/{{ el.img }})\" alt=\"\" />\n      <p>{{ el.title }}</p>\n      <p>{{ el.anons }}</p>\n      <p>{{ el.published }}</p>\n    </div>\n  </div>\n</template>\n\n<!-- ---------- vue - приложение -------------- -->\n<script>\nimport axios from \"axios\";\nimport Item1 from \"./components/Item1.vue\";\n\nexport default {\n  name: \"App\",\n  components: {\n    Item1,\n  },\n  data() {\n    return {\n      items: [],\n      isVisible: true,\n      title: \"\",\n      user: \"\",\n      msgBtnAdd: \"Add Item\",\n      isNew: true,\n      el: {},\n      i: 0,\n      id: 0,\n    };\n  },\n\n  // Во vue.config.js сказали, что вместо 'api/'\n  // подставляем 'http://localhost:3000'\n  // переходим на главную страницу нашего api-приложения\n  async mounted() {\n    const result = await axios.get(\"/api/blog-item\");\n    this.items = result.data;\n  },\n  methods: {\n    // Удаление записей\n    async deleteItem(el, i) {\n      await axios.delete(\"/api/blog-item/\" + el._id);\n      // обращаемся к массиву и обрезаем, начиная с индекса 'i' - один элемент\n      this.items.splice(i, 1);\n    },\n    // Добавление записей\n    async addItem() {\n      let date = Date.now();\n      let url = `/api/blog-item/?title=${this.title}&user=${this.user}&published=${date}`;\n      // так не сработает, нужно передавать параметры в командной строке (запросе)\n      // const result = await axios.post(\"/api/todo-item/\", {\n      //   title: this.title,\n      //   user: this.user,\n      //   published: Date.now(), //\"2023\",\n      // });\n      if (this.isNew) {\n        await axios.post(url);\n        // Отображаем запись\n        this.items.push({\n          title: this.title,\n          user: this.user,\n          published: date,\n        });\n      } else {\n        // await axios.put(url + this.id);\n        await axios.post(url);\n        // console.log(\"Inside Add i: \" + i);\n        console.log(\"el.title: \" + this.el.title);\n        // console.log(\"this.items.user: \" + this.items[i].user);\n        console.log(\"this.title: \" + this.title);\n        console.log(\"this.user: \" + this.user);\n        console.log(\"date: \" + date);\n        this.el.title = this.title;\n        this.el.user = this.user;\n        this.el.published = date;\n\n        this.msgBtnAdd = \"Add Item\";\n      }\n      // Очищаем переменные title, user - и значения внутри input-полей\n      this.title = \"\";\n      this.user = \"\";\n    },\n    // Обновление записей\n    async editItem(el, i) {\n      // let date = Date.now();\n      this.el = el;\n      this.i = i;\n      this.id = el._id;\n      this.isNew = false;\n      console.log(\"isNew after: \" + this.isNew);\n      console.log(\"msgBtnAdd: \" + this.msgBtnAdd);\n\n      this.msgBtnAdd = \"Update\";\n      console.log(\"msgBtnAdd: \" + this.msgBtnAdd);\n      console.log(\"this.el: \");\n      console.log(this.el);\n      console.log(\"this.i: \" + this.i);\n      console.log(\"this.id: \" + this.id);\n      // btnAdd.innerHTML = \"Update\";\n      // let url = `/api/todo-item/?title=${this.title}&user=${this.user}&published=${date}`;\n      //  await axios.post(url);\n      // Отображаем запись\n      // this.items.push({\n      //   title: this.title,\n      //   user: this.user,\n      //   published: date,\n      // });\n      // console.log(`el: ${el}, i: ${i}`);\n      // `title: (!(${title}) == '' ? ${title}: '') , this.title: ${this.title}`\n      console.log(`el: ${el}`);\n      console.log(`title: ${el.title}`);\n      console.log(`user: ${el.user}`);\n      console.log(`published: ${el.published}`);\n\n      this.title = el.title;\n      this.user = el.user;\n    },\n  },\n};\n</script>\n\n<style>\n.item button {\n  width: 60%;\n  margin-left: 20%;\n  margin-bottom: 20px;\n  border-radius: 4px;\n  text-align: center;\n  font-size: 16px;\n  /* Выравниваем по центру (по вертикали), указываем line-height = height*/\n  /* line-height: 70px; */\n  /* background: #e79e6d; */\n  background: #a52323;\n  border: 2px solid coral;\n  color: cornsilk;\n  cursor: pointer;\n  transition: all 500ms ease;\n}\n\n.btnBack {\n  /* margin-top: 20px; */\n  /* width: 40%; */\n  position: relative;\n  top: 100px;\n  left: 30px;\n  height: 40px;\n  width: 100px;\n  border-radius: 25px;\n  line-height: 50px;\n  text-align: center;\n  font-size: 16px;\n  background: #a52323;\n  border: 2px solid coral;\n  color: cornsilk;\n  cursor: pointer;\n  transition: transform 500ms ease;\n}\n\n.item button:hover,\n.btnBack {\n  cursor: pointer;\n  background: #cc1f1f;\n  /* background: #e43f3f; */\n}\n.list-item {\n  width: 100%;\n  background: aquamarine; /*#fcddaf; #dfbc4c*/\n  padding: 10px 15px;\n  margin-top: 10px;\n  border: 1px solid silver;\n  border-radius: 5px;\n  font-size: 14px;\n}\n\n.list-item p {\n  margin-bottom: 8px;\n}\n\n.list-item p span {\n  float: right;\n  font-size: 12px;\n  color: #8f772d;\n}\n\n.list-item p:last-child {\n  color: #b1953c;\n  font-size: 11px;\n}\n\n.list-item button {\n  /* display: block; */\n  float: right;\n  border: 0;\n  border-radius: 5px;\n  padding: 4px 8px;\n  margin: 0;\n  margin-left: 10px;\n  color: #fddaae;\n  cursor: pointer;\n  font-size: 12px;\n  /* transition: transform 300ms ease; */\n}\n\n.btnEdit {\n  background: #348531;\n}\n\n/* .list-item button:hover {\n  transform: scale(1.1);\n} */\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}