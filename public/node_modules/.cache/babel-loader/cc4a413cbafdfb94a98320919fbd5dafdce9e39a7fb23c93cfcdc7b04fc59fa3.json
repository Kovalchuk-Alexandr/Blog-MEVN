{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 1,\n  class: \"items\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Item1 = _resolveComponent(\"Item1\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [!$data.isVisible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"btnBack\",\n    onClick: _cache[0] || (_cache[0] = $event => this.isVisible = !this.isVisible)\n  }, _toDisplayString($data.msgBtnAdd), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.isVisible ? (_openBlock(), _createElementBlock(\"main\", _hoisted_1, [_createCommentVNode(\" <div v-if=\\\"isVisible\\\"> \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, el => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"item\",\n      key: el.id\n    }, [_createElementVNode(\"img\", {\n      src: el.img,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"h4\", null, _toDisplayString(el.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(el.anons), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(el.published), 1 /* TEXT */), _createCommentVNode(\" @click=\\\"this.isVisible = !this.isVisible\\\" \"), _createElementVNode(\"button\", {\n      onClick: $event => $options.showDetailes(el.id),\n      type: \"button\",\n      class: \"btnDetails\"\n    }, \" Details \", 8 /* PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" </div> \")])) : _createCommentVNode(\"v-if\", true), !$data.isVisible ? (_openBlock(), _createBlock(_component_Item1, {\n    key: 2,\n    id: this.id\n  }, null, 8 /* PROPS */, [\"id\"])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","$data","isVisible","_createElementBlock","onClick","_cache","$event","msgBtnAdd","_hoisted_1","_createCommentVNode","_Fragment","_renderList","items","el","key","id","_createElementVNode","src","img","alt","_toDisplayString","title","anons","published","$options","showDetailes","type","_hoisted_3","_createBlock","_component_Item1"],"sources":["D:\\JS\\JSProjects\\Node JS\\nodejs\\blog\\public\\src\\App.vue"],"sourcesContent":["<template>\n  <div\n    class=\"btnBack\"\n    v-if=\"!isVisible\"\n    @click=\"this.isVisible = !this.isVisible\"\n  >\n    {{ msgBtnAdd }}\n  </div>\n  <main class=\"items\" v-if=\"isVisible\">\n    <!-- <div v-if=\"isVisible\"> -->\n    <div class=\"item\" v-for=\"el in items\" :key=\"el.id\">\n      <img v-bind:src=\"el.img\" alt=\"\" />\n      <h4>{{ el.title }}</h4>\n      <p>{{ el.anons }}</p>\n      <p>{{ el.published }}</p>\n      <!-- @click=\"this.isVisible = !this.isVisible\" -->\n      <button @click=\"showDetailes(el.id)\" type=\"button\" class=\"btnDetails\">\n        Details\n      </button>\n    </div>\n    <!-- </div> -->\n  </main>\n  <Item1 v-bind:id=\"this.id\" v-if=\"!isVisible\" />\n</template>\n\n<!-- ---------- vue - приложение -------------- -->\n<script>\nimport axios from \"axios\";\nimport Item1 from \"./components/Item1.vue\";\n\nexport default {\n  name: \"App\",\n  components: {\n    Item1,\n  },\n  data() {\n    return {\n      items: [],\n      id: 0,\n      isVisible: true,\n      msgBtnAdd: \"Back to list\",\n      isNew: true,\n      el: {},\n      i: 0,\n    };\n  },\n\n  // Во vue.config.js сказали, что вместо 'api/'\n  // подставляем 'http://localhost:3000'\n  // переходим на главную страницу нашего api-приложения\n  async mounted() {\n    const result = await axios.get(\"/api/blog-item\");\n    this.items = result.data;\n    console.log(this.items);\n  },\n  methods: {\n    // Удаление записей\n    async deleteItem(el, i) {\n      await axios.delete(\"/api/blog-item/\" + el._id);\n      // обращаемся к массиву и обрезаем, начиная с индекса 'i' - один элемент\n      this.items.splice(i, 1);\n      // Удаление элемента\n      // deletePost(id) {\n      // добавляем в новый массив все, кроме помеченного на удаление\n      // this.articles = this.articles.filter((el) => el.id != id);\n      // },\n    },\n    // Добавление записей\n    async addItem() {\n      let date = Date.now();\n      let url = `/api/blog-item/?title=${this.title}&user=${this.user}&published=${date}`;\n      // так не сработает, нужно передавать параметры в командной строке (запросе)\n      // const result = await axios.post(\"/api/todo-item/\", {\n      //   title: this.title,\n      //   user: this.user,\n      //   published: Date.now(), //\"2023\",\n      // });\n      if (this.isNew) {\n        await axios.post(url);\n        // Отображаем запись\n        this.items.push({\n          title: this.title,\n          user: this.user,\n          published: date,\n        });\n      } else {\n        // await axios.put(url + this.id);\n        await axios.post(url);\n        // console.log(\"Inside Add i: \" + i);\n        console.log(\"el.title: \" + this.el.title);\n        // console.log(\"this.items.user: \" + this.items[i].user);\n        console.log(\"this.title: \" + this.title);\n        console.log(\"this.user: \" + this.user);\n        console.log(\"date: \" + date);\n        this.el.title = this.title;\n        this.el.user = this.user;\n        this.el.published = date;\n\n        this.msgBtnAdd = \"Add Item\";\n      }\n      // Очищаем переменные title, user - и значения внутри input-полей\n      this.title = \"\";\n      this.user = \"\";\n    },\n    // Обновление записей\n    async editItem(el, i) {\n      // let date = Date.now();\n      this.el = el;\n      this.i = i;\n      this.id = el._id;\n      this.isNew = false;\n      console.log(\"isNew after: \" + this.isNew);\n      console.log(\"msgBtnAdd: \" + this.msgBtnAdd);\n\n      this.msgBtnAdd = \"Update\";\n      console.log(\"msgBtnAdd: \" + this.msgBtnAdd);\n      console.log(\"this.el: \");\n      console.log(this.el);\n      console.log(\"this.i: \" + this.i);\n      console.log(\"this.id: \" + this.id);\n      // btnAdd.innerHTML = \"Update\";\n      // let url = `/api/todo-item/?title=${this.title}&user=${this.user}&published=${date}`;\n      //  await axios.post(url);\n      // Отображаем запись\n      // this.items.push({\n      //   title: this.title,\n      //   user: this.user,\n      //   published: date,\n      // });\n      // console.log(`el: ${el}, i: ${i}`);\n      // `title: (!(${title}) == '' ? ${title}: '') , this.title: ${this.title}`\n      console.log(`el: ${el}`);\n      console.log(`title: ${el.title}`);\n      console.log(`user: ${el.user}`);\n      console.log(`published: ${el.published}`);\n\n      this.title = el.title;\n      this.user = el.user;\n    },\n    showDetailes(id) {\n      this.isVisible = !this.isVisible;\n      this.id = id;\n      console.log(this.id);\n    },\n  },\n};\n</script>\n\n<style>\n.item button {\n  width: 60%;\n  margin-left: 20%;\n  margin-bottom: 20px;\n  border-radius: 4px;\n  text-align: center;\n  font-size: 16px;\n  background: #a52323;\n  border: 2px solid coral;\n  color: cornsilk;\n  cursor: pointer;\n  transition: all 500ms ease;\n}\n\ndiv .btnBack {\n  /* margin-top: 20px; */\n  /* width: 40%; */\n  position: relative;\n  top: 100px;\n  left: 30px;\n  height: 40px;\n  width: 100px;\n  border-radius: 25px;\n  line-height: 50px;\n  text-align: center;\n  font-size: 16px;\n  background: #a52323;\n  border: 2px solid coral;\n  color: cornsilk;\n  cursor: pointer;\n  transition: transform 500ms ease;\n}\n\n.item button:hover,\n.btnBack {\n  cursor: pointer;\n  background: #cc1f1f;\n  /* background: #e43f3f; */\n}\n/* .list-item {\n  width: 100%;\n  padding: 10px 15px;\n  margin-top: 10px;\n  border: 1px solid silver;\n  border-radius: 5px;\n  font-size: 14px;\n}\n\n.list-item p {\n  margin-bottom: 8px;\n}\n\n.list-item p span {\n  float: right;\n  font-size: 12px;\n  color: #8f772d;\n}\n\n.list-item p:last-child {\n  color: #b1953c;\n  font-size: 11px;\n}\n\n.list-item button {\n  float: right;\n  border: 0;\n  border-radius: 5px;\n  padding: 4px 8px;\n  margin: 0;\n  margin-left: 10px;\n  color: #fddaae;\n  cursor: pointer;\n  font-size: 12px;\n}\n\n.btnEdit {\n  background: #348531;\n} \n\n .list-item button:hover {\n  transform: scale(1.1);\n} */\n</style>\n"],"mappings":";;;EAQQA,KAAK,EAAC;;;;;;8DALHC,KAAA,CAAAC,SAAS,I,cAFlBC,mBAAA,CAMM;;IALJH,KAAK,EAAC,SAAS;IAEdI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,SAAOJ,SAAS,SAASA,SAAS;sBAErCD,KAAA,CAAAM,SAAS,oB,mCAEYN,KAAA,CAAAC,SAAS,I,cAAnCC,mBAAA,CAaO,QAbPK,UAaO,GAZLC,mBAAA,8BAA+B,G,kBAC/BN,mBAAA,CASMO,SAAA,QAAAC,WAAA,CATyBV,KAAA,CAAAW,KAAK,EAAXC,EAAE;yBAA3BV,mBAAA,CASM;MATDH,KAAK,EAAC,MAAM;MAAsBc,GAAG,EAAED,EAAE,CAACE;QAC7CC,mBAAA,CAAkC;MAAtBC,GAAG,EAAEJ,EAAE,CAACK,GAAG;MAAEC,GAAG,EAAC;yCAC7BH,mBAAA,CAAuB,YAAAI,gBAAA,CAAhBP,EAAE,CAACQ,KAAK,kBACfL,mBAAA,CAAqB,WAAAI,gBAAA,CAAfP,EAAE,CAACS,KAAK,kBACdN,mBAAA,CAAyB,WAAAI,gBAAA,CAAnBP,EAAE,CAACU,SAAS,kBAClBd,mBAAA,iDAAkD,EAClDO,mBAAA,CAES;MAFAZ,OAAK,EAAAE,MAAA,IAAEkB,QAAA,CAAAC,YAAY,CAACZ,EAAE,CAACE,EAAE;MAAGW,IAAI,EAAC,QAAQ;MAAC1B,KAAK,EAAC;OAAa,WAEtE,iBAAA2B,UAAA,E;kCAEFlB,mBAAA,YAAe,C,yCAEiBR,KAAA,CAAAC,SAAS,I,cAA3C0B,YAAA,CAA+CC,gBAAA;;IAAjCd,EAAE,OAAOA"},"metadata":{},"sourceType":"module","externalDependencies":[]}